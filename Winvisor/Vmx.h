#pragma once
#include <ntddk.h>
#include <intrin.h>
#include "Arch.h"
#include "WinvisorUtil.h"

// Set the define for unicore mode
#define UNICORE 0

#if UNICORE == 1
#define CPU_COUNT 1
#else
#define CPU_COUNT 3
#endif


/*
* vmcs_revision_id - 
*	Bits 30:0: VMCS revision identifier
*	Bit 31: shadow-VMCS indicator
*/
typedef struct _VMCS_REGION
{
	UINT32 vmcsRevisionId;
	UINT32 vmxAbortIndicator;
	UINT8  vmcsData[PAGE_SIZE - 8];
} VMCS_REGION, *PVMCS_REGION;

/*
* the vmcs regions hold the virtual address to the regions
*/
typedef struct _SYSTEM_DATA 
{
	PVMCS_REGION vmxonRegion;
	PVMCS_REGION vmcsRegion;
} SYSTEM_DATA, *PSYSTEM_DATA;

typedef union _VMCS_COMP_ENCODING 
{
	struct 
	{
		int accessType : 1; 
		int index : 9;
		int type : 2;
		int reserved : 1;
		int width : 2;
		int reserved2 : 17;
	} Bitfield;
	UINT32 flags;
} VMCS_COMP_ENCODING, *PVMCS_COMP_ENCODING;

/*
* (0 = full; 1 = high); must be full for 16-bit, 32-bit, and natural-width fields
*/
enum VmcsAccessType
{
	FULL = 0,
	HIGH = 1
};

/*
* Type:
*	0: control
*	1: VM-exit information
*	2: guest state
*	3: host state
*/
enum VmcsFieldType
{
	CONTROL = 0,
	VM_EXIT_INFO = 1,
	GUEST_STATE = 2,
	HOST_STATE = 3
};

/*
* Width:
*	0: 16-bit
*	1: 64-bit
*	2: 32-bit
*	3: natural-width
*/
enum VmcsFieldWidth
{
	BITS_16 = 0,
	BITS_64 = 1,
	BITS_32 = 2,
	NATURAL_WIDTH = 3
};

/*
*	As of September 2023 manual version
*/
enum VmcsFields
{
	// 16-Bit Control Fields
	VIRTUAL_PROCESSOR_IDENTIFIER					= 0x00000000,
	POSTED_INTERRUPT_NOTIFICATION_VECTOR			= 0x00000002,
	EPTP_INDEX										= 0x00000004,
	HLAT_PREFIX_SIZE								= 0x00000006,
	LAST_PID_POINTER_INDEX							= 0x00000008,
													
	// 16-Bit Guest-State Fields					
	GUEST_ES_SELECTOR								= 0x00000800,
	GUEST_CS_SELECTOR								= 0x00000802,
	GUEST_SS_SELECTOR								= 0x00000804,
	GUEST_DS_SELECTOR								= 0x00000806,
	GUEST_FS_SELECTOR								= 0x00000808,
	GUEST_GS_SELECTOR								= 0x0000080a,
	GUEST_LDTR_SELECTOR								= 0x0000080c,
	GUEST_TR_SELECTOR								= 0x0000080e,
	GUEST_INTERRUPT_STATUS							= 0x00000810,
	PML_INDEX										= 0x00000812,
	GUEST_UINV										= 0x00000814,
													
	// 16-Bit Host-State Fields						
	HOST_ES_SELECTOR								= 0x00000c00,
	HOST_CS_SELECTOR								= 0x00000c02,
	HOST_SS_SELECTOR								= 0x00000c04,
	HOST_DS_SELECTOR								= 0x00000c06,
	HOST_FS_SELECTOR								= 0x00000c08,
	HOST_GS_SELECTOR								= 0x00000c0a,
	HOST_TR_SELECTOR								= 0x00000c0c,
													
	// 64-Bit Control Fields						
	ADDR_OF_IO_BITMAP_A_FULL						= 0x00002000,
	ADDR_OF_IO_BITMAP_A_HIGH						= 0x00002001,
	ADDR_OF_IO_BITMAP_B_FULL						= 0x00002002,
	ADDR_OF_IO_BITMAP_B_HIGH						= 0x00002003,
	ADDR_OF_MSR_BITMAPS_FULL						= 0x00002004,
	ADDR_OF_MSR_BITMAPS_HIGH						= 0x00002005,
	VMEXIT_MSR_STORE_ADDR_FULL						= 0x00002006,
	VMEXIT_MSR_STORE_ADDR_HIGH						= 0x00002007,
	VMEXIT_MSR_LOAD_ADDR_FULL						= 0x00002008,
	VMEXIT_MSR_LOAD_ADDR_HIGH						= 0x00002009,
	VMENTRY_MSR_LOAD_ADDR_FULL						= 0x0000200a,
	VMENTRY_MSR_LOAD_ADDR_HIGH						= 0x0000200b,
	EXECUTIVE_VMCS_POINTER_FULL						= 0x0000200c,
	EXECUTIVE_VMCS_POINTER_HIGH						= 0x0000200d,
	PML_ADDR_FULL									= 0x0000200e,
	PML_ADDR_HIGH			 						= 0x0000200f,
	TSC_OFFSET_FULL				 					= 0x00002010,
	TSC_OFFSET_HIGH									= 0x00002011,
	VIRTUAL_APIC_ADDR_FULL							= 0x00002012,
	VIRTUAL_APIC_ADDR_HIGH							= 0x00002013,
	APIC_ACCESS_ADDR_FULL							= 0x00002014,
	APIC_ACCESS_ADDR_HIGH							= 0x00002015,
	POSTED_INTERRUPT_DESCRIPTOR_ADDR_FULL			= 0x00002016,
	POSTED_INTERRUPT_DESCRIPTOR_ADDR_HIGH			= 0x00002017,
	VM_FUNCTION_CONTROLS_FULL						= 0x00002018,
	VM_FUNCTION_CONTROLS_HIGH						= 0x00002019,
	EPT_POINTER_FULL								= 0x0000201a,
	EPT_POINTER_HIGH								= 0x0000201b,
	EOI_EXIT_BITMAP0_FULL							= 0x0000201c,
	EOI_EXIT_BITMAP0_HIGH							= 0x0000201d,
	EOI_EXIT_BITMAP1_FULL							= 0x0000201e,
	EOI_EXIT_BITMAP1_HIGH							= 0x0000201f,
	EOI_EXIT_BITMAP2_FULL							= 0x00002020,
	EOI_EXIT_BITMAP2_HIGH							= 0x00002021,
	EOI_EXIT_BITMAP3_FULL							= 0x00002022,
	EOI_EXIT_BITMAP3_HIGH							= 0x00002023,
	EPTP_LIST_ADDRESS_FULL			  				= 0x00002024,
	EPTP_LIST_ADDRESS_HIGH			  				= 0x00002025,
	VMREAD_BITMAP_ADDR_FULL			  				= 0x00002026,
	VMREAD_BITMAP_ADDR_HIGH							= 0x00002027,
	VMWRITE_BITMAP_ADDR_FULL						= 0x00002028,
	VMWRITE_BITMAP_ADDR_HIGH						= 0x00002029,
	VIRTUAL_EXCEPTION_INFO_ADDR_FULL				= 0x0000202a,
	VIRTUAL_EXCEPTION_INFO_ADDR_HIGH				= 0x0000202b,
	XSS_EXITING_BITMAP_FULL							= 0x0000202c,
	XSS_EXITING_BITMAP_HIGH							= 0x0000202d,
	ENCLS_EXITING_BITMAP_FULL						= 0x0000202e,
	ENCLS_EXITING_BITMAP_HIGH						= 0x0000202f,
	SUB_PAGE_PERMISSION_TABLE_POINTER_FULL			= 0x00002030,
	SUB_PAGE_PERMISSION_TABLE_POINTER_HIGH			= 0x00002031,
	TSC_MULTIPLIER_FULL								= 0x00002032,
	TSC_MULTIPLIER_HIGH								= 0x00002033,
	TERTIARY_PROC_EXECUTION_CONTROLS_FULL			= 0x00002034,
	TERTIARY_PROC_EXECUTION_CONTROLS_HIGH			= 0x00002035,
	ENCLV_EXITING_BITMAP_FULL						= 0x00002036,
	ENCLV_EXITING_BITMAP_HIGH						= 0x00002037,
	LOW_PASID_DIRECTORY_ADDR_FULL					= 0x00002038,
	LOW_PASID_DIRECTORY_ADDR_HIGH					= 0x00002039,
	HIGH_PASID_DIRECTORY_ADDR_FULL					= 0x0000203a,
	HIGH_PASID_DIRECTORY_ADDR_HIGH					= 0x0000203b,
	SHARED_EPT_POINTER_FULL							= 0x0000203c,
	SHARED_EPT_POINTER_HIGH							= 0x0000203d,
	PCONFIG_EXITING_BITMAP_FULL						= 0x0000203e,
	PCONFIG_EXITING_BITMAP_HIGH						= 0x0000203f,
	HLATP_FULL										= 0x00002040,
	HLATP_HIGH										= 0x00002041,
	PID_POINTER_TABLE_ADDR_FULL						= 0x00002042,
	PID_POINTER_TABLE_ADDR_HIGH						= 0x00002043,
	SECONDARY_VMEXIT_CONTROLS_FULL					= 0x00002044,
	SECONDARY_VMEXIT_CONTROLS_HIGH					= 0x00002045,
	IA32_SPEC_CTRL_MASK_FULL						= 0x0000204a,
	IA32_SPEC_CTRL_MASK_HIGH						= 0x0000204b,
	IA32_SPEC_CTRL_SHADOW_FULL						= 0x0000204c,
	IA32_SPEC_CTRL_SHADOW_HIGH						= 0x0000204d,
													
	// 64-Bit Read-Only Data Field					
	GUEST_PHYSICAL_ADDR_FULL						= 0x00002400,
	GUEST_PHYSICAL_ADDR_HIGH						= 0x00002401,
													
	// 64-Bit Guest-State Fields 					
	VMCS_LINK_POINTER_FULL							= 0x00002800,
	VMCS_LINK_POINTER_HIGH							= 0x00002801,
	GUEST_IA32_DEBUGCTL_FULL						= 0x00002802,
	GUEST_IA32_DEBUGCTL_HIGH						= 0x00002803,
	GUEST_IA32_PAT_FULL								= 0x00002804,
	GUEST_IA32_PAT_HIGH								= 0x00002805,
	GUEST_IA32_EFER_FULL							= 0x00002806,
	GUEST_IA32_EFER_HIGH							= 0x00002807,
	GUEST_IA32_PERF_GLOBAL_CTRL_FULL				= 0x00002808,
	GUEST_IA32_PERF_GLOBAL_CTRL_HIGH				= 0x00002809,
	GUEST_PDPTE0_FULL								= 0x0000280a,
	GUEST_PDPTE0_HIGH								= 0x0000280b,
	GUEST_PDPTE1_FULL								= 0x0000280c,
	GUEST_PDPTE1_HIGH								= 0x0000280d,
	GUEST_PDPTE2_FULL								= 0x0000280e,
	GUEST_PDPTE2_HIGH								= 0x0000280f,
	GUEST_PDPTE3_FULL								= 0x00002810,
	GUEST_PDPTE3_HIGH								= 0x00002811,
	GUEST_IA32_BNDCFGS_FULL							= 0x00002812,
	GUEST_IA32_BNDCFGS_HIGH							= 0x00002813,
	GUEST_IA32_RTIT_CTL_FULL						= 0x00002814,
	GUEST_IA32_RTIT_CTL_HIGH						= 0x00002815,
	GUEST_IA32_LBR_CTL_FULL							= 0x00002816,
	GUEST_IA32_LBR_CTL_HIGH							= 0x00002817,
	GUEST_IA32_PKRS_FULL							= 0x00002818,
	GUEST_IA32_PKRS_HIGH							= 0x00002819,
													
	// 64-Bit Host-State Fields						
	HOST_IA32_PAT_FULL								= 0x00002c00,
	HOST_IA32_PAT_HIGH								= 0x00002c01,
	HOST_IA32_EFER_FULL								= 0x00002c02,
	HOST_IA32_EFER_HIGH								= 0x00002c03,
	HOST_IA32_PERF_GLOBAL_CTRL_FULL					= 0x00002c04,
	HOST_IA32_PERF_GLOBAL_CTRL_HIGH					= 0x00002c05,
	HOST_IA32_PKRS_FULL								= 0x00002c06,
	HOST_IA32_PKRS_HIGH								= 0x00002c07,

	// 32-Bit Control Fields
	PIN_BASED_VM_EXECUTION_CONTROLS					= 0x00004000,
	PRIMARY_PROCESSOR_BASED_VM_EXECUTION_CONTROLS	= 0x00004002,
	EXCEPTION_BITMAP								= 0x00004004,
	PAGE_FAULT_ERROR_CODE_MASK						= 0x00004006,
	PAGE_FAULT_ERROR_CODE_MATCH						= 0x00004008,
	CR3_TARGET_COUNT								= 0x0000400a,
	PRIMARY_VM_EXIT_CONTROLS						= 0x0000400c,
	VM_EXIT_MSR_STORE_COUNT							= 0x0000400e,
	VM_EXIT_MSR_LOAD_COUNT							= 0x00004010,
	VM_ENTRY_CONTROLS								= 0x00004012,
	VM_ENTRY_MSR_LOAD_COUNT							= 0x00004014,
	VM_ENTRY_INTERRUPTION_INFO_FIELD				= 0x00004016,
	VM_ENTRY_EXCEPTION_ERROR_CODE					= 0x00004018,
	VM_ENTRY_INSTRUCTION_LENGTH						= 0x0000401a,
	TPR_THRESHOLD									= 0x0000401c,
	SECONDARY_PROCESSOR_BASED_VM_EXECUTION_CONTROLS = 0x0000401e,
	PLE_GAP											= 0x00004020,
	PLE_WINDOW										= 0x00004022,
	INSTRUCTION_TIMEOUT_CONTROL						= 0x00004024,
	
	// 32-Bit Read-Only Data Fields
	VM_INSTRUCTION_ERROR							= 0x00004400,
	EXIT_REASON										= 0x00004402,
	VM_EXIT_INTERRUPTION_INFO						= 0x00004404,
	VM_EXIT_INTERRUPTION_ERROR_CODE					= 0x00004406,
	IDT_VECTORING_INFO_FIELD						= 0x00004408,
	IDT_VECTORING_ERROR_CODE						= 0x0000440a,
	VM_EXIT_INSTRUCTION_LENGTH						= 0x0000440c,
	VM_EXIT_INSTRUCTION_INFO						= 0x0000440e,

	// 32-Bit Guest-State Fields
	GUEST_ES_LIMIT									= 0x00004800,
	GUEST_CS_LIMIT									= 0x00004802,
	GUEST_SS_LIMIT									= 0x00004804,
	GUEST_DS_LIMIT									= 0x00004806,
	GUEST_FS_LIMIT									= 0x00004808,
	GUEST_GS_LIMIT									= 0x0000480a,
	GUEST_LDTR_LIMIT								= 0x0000480c,
	GUEST_TR_LIMIT									= 0x0000480e,
	GUEST_GDTR_LIMIT								= 0x00004810,
	GUEST_IDTR_LIMIT								= 0x00004812,
	GUEST_ES_ACCESS_RIGHTS							= 0x00004814,
	GUEST_CS_ACCESS_RIGHTS							= 0x00004816,
	GUEST_SS_ACCESS_RIGHTS							= 0x00004818,
	GUEST_DS_ACCESS_RIGHTS							= 0x0000481a,
	GUEST_FS_ACCESS_RIGHTS							= 0x0000481c,
	GUEST_GS_ACCESS_RIGHTS							= 0x0000481e,
	GUEST_LDTR_ACCESS_RIGHTS						= 0x00004820,
	GUEST_TR_ACCESS_RIGHTS							= 0x00004822,
	GUEST_INTERRUPTIBILITY_STATE					= 0x00004824,
	GUEST_ACTIVITY_STATE							= 0x00004826,
	GUEST_SMBASE									= 0x00004828,
	GUEST_IA32_SYSENTER_CS							= 0x0000482a,
	VMX_PREEMPTION_TIMER_VALUE						= 0x0000482e,

	// 32-Bit Host-State Field
	HOST_IA32_SYSENTER_CS							= 0x00004c00,

	// Natural-Width Control Fields
	CR0_GUEST_HOST_MASK								= 0x00006000,
	CR4_GUEST_HOST_MASK								= 0x00006002,
	CR0_READ_SHADOW									= 0x00006004,
	CR4_READ_SHADOW									= 0x00006006,
	CR3_TARGET_VALUE_0								= 0x00006008,
	CR3_TARGET_VALUE_1								= 0x0000600a,
	CR3_TARGET_VALUE_2								= 0x0000600c,
	CR3_TARGET_VALUE_3								= 0x0000600e,

	// Natural-Width Read-Only Data Fields
	EXIT_QUALIFICATION								= 0x00006400,
	IO_RCX											= 0x00006402,
	IO_RSI											= 0x00006404,
	IO_RDI											= 0x00006406,
	IO_RIP											= 0x00006408,
	GUEST_LINEAR_ADDR								= 0x0000640a,

	// Natural-Width Guest-State Fields
	GUEST_CR0										= 0x00006800,
	GUEST_CR3										= 0x00006802,
	GUEST_CR4										= 0x00006804,
	GUEST_ES_BASE									= 0x00006806,
	GUEST_CS_BASE									= 0x00006808,
	GUEST_SS_BASE									= 0x0000680a,
	GUEST_DS_BASE									= 0x0000680c,
	GUEST_FS_BASE									= 0x0000680e,
	GUEST_GS_BASE									= 0x00006810,
	GUEST_LDTR_BASE									= 0x00006812,
	GUEST_TR_BASE									= 0x00006814,
	GUEST_GDTR_BASE									= 0x00006816,
	GUEST_IDTR_BASE									= 0x00006818,
	GUEST_DR7										= 0x0000681a,
	GUEST_RSP										= 0x0000681c,
	GUEST_RIP										= 0x0000681e,
	GUEST_RFLAGS									= 0x00006820,
	GUEST_PENDING_DEBUG_EXCEPTIONS					= 0x00006822,
	GUEST_IA32_SYSENTER_ESP							= 0x00006824,
	GUEST_IA32_SYSENTER_EIP							= 0x00006826,
	GUEST_IA32_S_CET								= 0x00006828,
	GUEST_SSP										= 0x0000682a,
	GUEST_IA32_INTERRUPT_SSP_TABLE_ADDR				= 0x0000682c,

	// Natural-Width Host-State Fields
	HOST_CR0										= 0x00006c00,
	HOST_CR3										= 0x00006c02,
	HOST_CR4										= 0x00006c04,
	HOST_FS_BASE									= 0x00006c06,
	HOST_GS_BASE									= 0x00006c08,
	HOST_TR_BASE									= 0x00006c0a,
	HOST_GDTR_BASE									= 0x00006c0c,
	HOST_IDTR_BASE									= 0x00006c0e,
	HOST_IA32_SYSENTER_ESP							= 0x00006c10,
	HOST_IA32_SYSENTER_EIP							= 0x00006c12,
	HOST_RSP										= 0x00006c14,
	HOST_RIP										= 0x00006c16,
	HOST_IA32_S_CET									= 0x00006c18,
	HOST_SSP										= 0x00006c1a,
	HOST_IA32_INTERRUPT_SSP_TABLE_ADDR				= 0x00006c1c
};

NTSTATUS CheckVmxSupport();
BOOLEAN VmxonOp(UINT64* vmxonRegionPhysical);
BOOLEAN VmptrldOp(UINT64* vmcsPhysical);
VOID VmxoffOp();
UINT64* InitVmcsRegion();
VOID DeallocVmcsRegion(UINT64* vmcsRegionPhysical);
BOOLEAN AllocSystemData(PSYSTEM_DATA systemData);
VOID DeallocSystemData(PSYSTEM_DATA systemData);
BOOLEAN WvsrRunVm();
VOID WvsrStopVm();
